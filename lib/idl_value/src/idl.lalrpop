use std::str::FromStr;
use crate::value::IDLValue;

grammar;

pub Args = CommaSep<Arg>;

Arg: IDLValue = {
    "true" => IDLValue::Bool(true),
    "false" => IDLValue::Bool(false),
    "null" => IDLValue::Null,
    Num => IDLValue::Int(<>),
    Text => IDLValue::Text(<>),
}

Num: i64 = r"[0-9]+" => i64::from_str(<>).unwrap();
Text: String = r"[[:alpha:]]\w*" => String::from_str(<>).unwrap();

// Also allows trailing commas
CommaSep<T>: Vec<T> = {
    <v:(<T> ",")*> <e:T?> => match e {
        None => v,
        Some(e) => {
            let mut v = v;
            v.push(e);
            v
        }
    }
};
