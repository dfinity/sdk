name: Check dfx asset preparation
# The cargo build steps in other workflows often benefit from caching of the results of this process,
# so this workflow runs it separately.

on:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # When getting Rust dependencies, retry on network error:
  CARGO_NET_RETRY: 10
  # Use the local .curlrc
  CURL_HOME: .

jobs:
  prepare:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-12 ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            !target/*/build/dfx-*/out/dfx-assets
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run build script
        run: |
          cargo check

  aggregate:
    name: prepare-dfx-assets:required
    if: ${{ always() }}
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: check step result directly
        if: ${{ needs.prepare.result != 'success' }}
        run: exit 1
