name: build
on: [push]
#  push:
#    branches:
#      - master
#  pull_request:

jobs:
  list_tests:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.set-tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v1
      - id: set-tests
        # see https://github.blog/changelog/2020-04-15-github-actions-new-workflow-features/
        # run: echo "::set-output name=tests::$(cd e2e ; echo -n "$(find tests-dfx -name '*.bash')\n$(find tests-replica -name '*.bash')") | jq --raw-input --slurp 'split("\n")'"
        run: echo "::set-output name=tests::$(cd e2e ; python -c 'import json; import sys; print(json.dumps(sys.argv[1:]).replace("\"", "\\\""))' tests-dfx/*.bash tests-replica/*.bash)"
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
        rust: [ '1.52.1' ]
        ic_ref: [ 0, 1 ]
        test_manual: [
                'tests-dfx/assetscanister.bash',
                'tests-dfx/base.bash'
        ]
        test: ${{fromJson(needs.list_tests.outputs.tests)}}
    env:
      USE_IC_REF: ${{ matrix.ic_ref }}

    steps:
      - uses: actions/checkout@v1
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.rust }}-1
      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup target add wasm32-unknown-unknown
          rustup component add rustfmt
      - name: Provision Darwin
        if: matrix.os == 'macos-latest'
        run: bash .github/workflows/provision-darwin.sh
      - name: Provision Linux
        if: matrix.os == 'ubuntu-latest'
        run: bash .github/workflows/provision-linux.sh

      - name: Build
        run: |
          cargo build
          echo "$(pwd)/target/debug" >>$GITHUB_PATH


      - name: Run e2e test
        run: |
          export
          curl --version
          bats e2e/${{ matrix.test }}
